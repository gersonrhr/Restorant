/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restorant;

import BD.ConexionMySql;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListDataListener;
/**
 *
 * @author Anon
 */
public class Nuevo extends javax.swing.JFrame implements Serializable {

    /**
     * Creates new form Nuevo
     */
    public Nuevo() {
        initComponents();
        this.setLocationRelativeTo(null);
        llenadotablas();
        
    }
    public int i=0;
 
    public void llenadotablas(){
//        
////           Object[] datos= new Object[2];
////           String s="";
////           
////           ConexionMySql mysql= new ConexionMySql();
////           Connection cn=mysql.Conectar();
////           s= "select comida, ensalada from comidas";
////           
////           Statement st;
////        try {
////            st = cn.createStatement();
////            ResultSet rs = st.executeQuery(s);
////            
////            while (rs.next()){
////            datos[0]= rs.getString("comida");
////            datos[1]= rs.getString("ensalada");
//////            modelo.addElement(datos[0]);
//////            modelo2.addElement(datos[1]);
////             
////            }
////            
////            
////        } catch (SQLException ex) {
////            Logger.getLogger(Nuevo.class.getName()).log(Level.SEVERE, null, ex);
////        }
//           
           
           
              
           String datos;
           String s="";
           
           ConexionMySql mysql= new ConexionMySql();
           Connection cn=mysql.Conectar();
           s= "select comida from comidas";
           
           Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(s);
            
            while (rs.next()){
                
            datos= rs.getString("comida");
            modelo.addElement(datos);
            
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Nuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
           s= "select ensalada from ensaladas";
           
           
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(s);
            
            while (rs.next()){
                
            datos= rs.getString("ensalada");
            modelo2.addElement(datos);
            
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Nuevo.class.getName()).log(Level.SEVERE, null, ex);
        } 
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtEnsalada = new javax.swing.JTextField();
        txtMesa = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtComentario = new javax.swing.JTextArea();
        txtPedido = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBorrarcomida = new javax.swing.JButton();
        btnBorrarensalada = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        modelo=new DefaultListModel();
        lstComidas = new javax.swing.JList();
        btnAgregarcomida = new javax.swing.JButton();
        btnAgregarensalada = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        modelo2=new DefaultListModel();
        lstEnsaladas = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblPedido = new javax.swing.JTable();
        btnEliminarPedido = new javax.swing.JButton();
        btnPedido = new javax.swing.JButton();
        BtnCancelar = new javax.swing.JButton();
        lblHora = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Mesa");

        jButton3.setText("Ingresar nuevo pedido a misma mesa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtComentario.setColumns(20);
        txtComentario.setRows(5);
        jScrollPane2.setViewportView(txtComentario);

        jLabel1.setText("Comentario");

        btnBorrarcomida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restorant/Sin título3.png"))); // NOI18N
        btnBorrarcomida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarcomidaActionPerformed(evt);
            }
        });

        btnBorrarensalada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restorant/Sin título3.png"))); // NOI18N
        btnBorrarensalada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarensaladaActionPerformed(evt);
            }
        });

        lstComidas.setModel(modelo);
        lstComidas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstComidasValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lstComidas);

        btnAgregarcomida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restorant/123.png"))); // NOI18N
        btnAgregarcomida.setActionCommand("btnAdd");
        btnAgregarcomida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarcomidaActionPerformed(evt);
            }
        });

        btnAgregarensalada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/restorant/123.png"))); // NOI18N
        btnAgregarensalada.setActionCommand("btnAdd");
        btnAgregarensalada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarensaladaActionPerformed(evt);
            }
        });

        lstEnsaladas.setModel(modelo2);
        lstEnsaladas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lstEnsaladasPropertyChange(evt);
            }
        });
        lstEnsaladas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEnsaladasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEnsaladas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAgregarcomida, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBorrarcomida, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(btnAgregarensalada, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBorrarensalada, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(txtPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(txtEnsalada, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrarcomida)
                    .addComponent(btnBorrarensalada)
                    .addComponent(btnAgregarcomida)
                    .addComponent(btnAgregarensalada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEnsalada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jLabel4.setText("Resumen");

        tblPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Comida", "Ensalada", "Comentario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblPedido);

        btnEliminarPedido.setText("Eliminar");
        btnEliminarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarPedido)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))))
        );

        btnPedido.setText("Pedido Terminado");
        btnPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedidoActionPerformed(evt);
            }
        });

        BtnCancelar.setText("Cancelar");
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });

        lblHora.setText("HORA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(lblHora)
                                .addGap(443, 443, 443))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(btnPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addComponent(lblHora)
                        .addGap(25, 25, 25)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if(txtPedido.getText().isEmpty() && txtEnsalada.getText().isEmpty() && txtComentario.getText().isEmpty()){}else{
        tblPedido.setValueAt(txtPedido.getText() , i, 0);    
        tblPedido.setValueAt(txtEnsalada.getText() , i, 1);   
        tblPedido.setValueAt(txtComentario.getText() , i, 2);   
        i++;
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnEliminarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPedidoActionPerformed
//        tblPedido.setValueAt( null, tblPedido.getSelectedRow() , 0);    
//        tblPedido.setValueAt( null, tblPedido.getSelectedRow(), 1);   
//        tblPedido.setValueAt( null, tblPedido.getSelectedRow(), 2);   
        if ( tblPedido.getSelectedRow() <21 && tblPedido.getSelectedRow()>=0) {
            DefaultTableModel dtm = (DefaultTableModel) tblPedido.getModel(); //TableProducto es el nombre de mi tabla ;)
        dtm.removeRow(tblPedido.getSelectedRow()); 
        i--;
        }
  
    
    }//GEN-LAST:event_btnEliminarPedidoActionPerformed

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
            this.hide();        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCancelarActionPerformed

    private void btnPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedidoActionPerformed
       Calendar cal = Calendar.getInstance();
        Date fecha = cal.getTime();
        DateFormat formatter = DateFormat.getTimeInstance();
        lblHora.setText( formatter.format( fecha ) ); 
        
        String query="";
        
        ConexionMySql mysql=new ConexionMySql();
        Connection cn = mysql.Conectar();
        String txt1,txt2,txt3,txt4,txt5;
        
        for (int nn=0;nn<i;nn++){
            
//        txt1= txtPedido.getText();
//        txt2=txtEnsalada.getText();
//        txt3=txtComentario.getText();
//        txt4=txtMesa.getText();
        txt1=tblPedido.getValueAt(nn, 0).toString();
        txt2=tblPedido.getValueAt(nn, 1).toString();
        txt3=tblPedido.getValueAt(nn, 2).toString();
        txt4=txtMesa.getText();
        txt5=formatter.format(fecha);   
        if(txt1.isEmpty() && txt2.isEmpty() && txt3.isEmpty()){}else{
        
        query="INSERT INTO pedido (pedido,ensalada,comentario,mesa,hora) " + "VALUES (?,?,?,?,?)";
        try {
            PreparedStatement pst= cn.prepareStatement(query);
            pst.setString(1, txt1);
            pst.setString(2, txt2);
            pst.setString(3, txt3);
            pst.setString(4, txt4);
            pst.setString(5, txt5);
            int n = pst.executeUpdate() ;
            
            if(n>0){
            JOptionPane.showMessageDialog(null, "Pedido Aceptado");         
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        }}
             hide();
        //////////manda info
        try {
            listanueva2();
        } catch (IOException ex) {
            Logger.getLogger(Nuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPedidoActionPerformed

    private void btnBorrarcomidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarcomidaActionPerformed
      if (lstComidas.getSelectedIndex()>=0) {
          modelo.removeElementAt(lstComidas.getSelectedIndex());
      }
    }//GEN-LAST:event_btnBorrarcomidaActionPerformed

    private void btnAgregarcomidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarcomidaActionPerformed
       if (!txtPedido.getText().isEmpty()){
        modelo.addElement(txtPedido.getText());     }   // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarcomidaActionPerformed

    private void btnAgregarensaladaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarensaladaActionPerformed
       if (!txtEnsalada.getText().isEmpty()){
        modelo2.addElement(txtEnsalada.getText());    
    } // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarensaladaActionPerformed

    private void btnBorrarensaladaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarensaladaActionPerformed
       if (lstEnsaladas.getSelectedIndex()>=0) {
          modelo2.removeElementAt(lstEnsaladas.getSelectedIndex());
      } // TODO add your handling code here:
    }//GEN-LAST:event_btnBorrarensaladaActionPerformed

    private void lstComidasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstComidasValueChanged
        if (txtPedido.toString().length()!=0){    
        txtPedido.setText(lstComidas.getSelectedValue().toString()); }       // TODO add your handling code here:
    }//GEN-LAST:event_lstComidasValueChanged

    private void lstEnsaladasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lstEnsaladasPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lstEnsaladasPropertyChange

    private void lstEnsaladasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEnsaladasValueChanged
        if (txtEnsalada.toString().length()!=0){
        txtEnsalada.setText(lstEnsaladas.getSelectedValue().toString());}      // TODO add your handling code here:
    }//GEN-LAST:event_lstEnsaladasValueChanged

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nuevo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nuevo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nuevo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nuevo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nuevo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JButton btnAgregarcomida;
    private javax.swing.JButton btnAgregarensalada;
    private javax.swing.JButton btnBorrarcomida;
    private javax.swing.JButton btnBorrarensalada;
    private javax.swing.JButton btnEliminarPedido;
    private javax.swing.JButton btnPedido;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblHora;
    private javax.swing.JList lstComidas;
    private DefaultListModel modelo;
    private javax.swing.JList lstEnsaladas;
    private DefaultListModel modelo2;
    private javax.swing.JTable tblPedido;
    private javax.swing.JTextArea txtComentario;
    private javax.swing.JTextField txtEnsalada;
    private javax.swing.JTextField txtMesa;
    private javax.swing.JTextField txtPedido;
    // End of variables declaration//GEN-END:variables

    private void enviar() {
            if (new ServicioDB().conectar()) {
             JOptionPane.showMessageDialog(this, "Conectado","Error de Conexion",JOptionPane.WARNING_MESSAGE);
                
                
        }
 
            
    }

//    private void listanueva() {
//       String query="";
//       ConexionMySql mysql=new ConexionMySql();
//        Connection cn = mysql.Conectar();
//        String txt1,txt2;
//        
//        
//        while (!modelo.isEmpty()){
//        txt1=modelo.getElementAt(0).toString();
//        modelo.removeElementAt(0);
//     query="INSERT INTO comidas (tipo,nombre) " + "VALUES (?,?)";
//       try {
//            PreparedStatement pst= cn.prepareStatement(query);
//            pst.setString(1, "1");
//            pst.setString(2, txt1);
//            int n = pst.executeUpdate() ;
//            
//            if(n>0){
////            JOptionPane.showMessageDialog(null, "Ya tamo watcho");
//            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(null, ex);
//        } 
//        }
//        
//        
//         while (!modelo2.isEmpty()){
//        txt1=modelo2.getElementAt(0).toString();
//        modelo2.removeElementAt(0);
//     query="INSERT INTO comidas (tipo,nombre) " + "VALUES (?,?)";
//       try {
//            PreparedStatement pst= cn.prepareStatement(query);
//            pst.setString(1, "2");
//            pst.setString(2, txt1);
//            int n = pst.executeUpdate() ;
//            
//            if(n>0){
//           JOptionPane.showMessageDialog(null, "Pedido Aceptado");
//            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(null, ex);
//        } 
//       }
//    }

    private void listanueva2() throws IOException{
//        String com,ens;
//        com=modelo.toString();
//        ens=modelo2.toArray().toString();
                
                String query="";
                ConexionMySql mysql=new ConexionMySql();
                Connection cn = mysql.Conectar();
                
                
                   
                try {
                 query="Delete from restorant.comidas";
                PreparedStatement pst;
                    pst = cn.prepareStatement(query);
                    int n = pst.executeUpdate() ;
                    if(n>0){}
                } catch (SQLException ex) {
                 }
                   
                
                
                
                
                query="INSERT INTO comidas (comida) " + "VALUES (?)";
               
                
                while (!modelo.isEmpty()){
                try {
                    PreparedStatement pst= cn.prepareStatement(query);
                    pst.setString(1,  modelo.getElementAt(0).toString());
                    modelo.remove(0);
                    int n = pst.executeUpdate() ;
                    if(n>0){
                   
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
                 }
                   
                   try {
                 query="Delete from restorant.ensaladas";
                PreparedStatement pst;
                    pst = cn.prepareStatement(query);
                    int n = pst.executeUpdate() ;
                    if(n>0){}
                } catch (SQLException ex) {
                 }
                
               query="INSERT INTO ensaladas (ensalada) " + "VALUES (?)";
                
                
                 while (!modelo2.isEmpty()){
                try {
                    PreparedStatement pst= cn.prepareStatement(query);
                    pst.setString(1,  modelo2.getElementAt(0).toString());
                    modelo2.remove(0);
                    int n = pst.executeUpdate() ;
                    if(n>0){
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
                }
               
    }
}
    
    
  
    
    
    
    

